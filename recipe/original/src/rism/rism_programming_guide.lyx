#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\begin_modules
logicalmkup
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
RISM Programming Guide
\end_layout

\begin_layout Section
Adding Runtime Options
\end_layout

\begin_layout Standard
Since 3D-RISM has multiple interfaces, adding new runtime options requires
 modifying multiple files.
 
\end_layout

\begin_layout Standard
The following files must be modified.
\end_layout

\begin_layout Subsection
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rism/amber_rism_interface.F90
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "subsec:amber_rism_interface"

\end_inset


\end_layout

\begin_layout Itemize
Add parameters to the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rismprm_t
\end_layout

\end_inset

 type.
 Note that the parameters are ordered by type.
 This is important for memory alignment with C.
\end_layout

\begin_deeper
\begin_layout Itemize
Check the total number of 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
integer
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
logical
\end_layout

\end_inset

 variables.
 If there is not a even number, the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
padding
\end_layout

\end_inset

 variable should be uncommented.
 Otherwise, it should be commented.
\end_layout

\end_deeper
\begin_layout Itemize
Check that the input values are rational in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
sanity_check()
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Use 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
update_param()
\end_layout

\end_inset

 to check if the default values are used.
 If the default flag, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
-9999.
\end_layout

\end_inset

 for floats and 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
-9999
\end_layout

\end_inset

 for integers, is passed, assign the default value.
\end_layout

\begin_deeper
\begin_layout Itemize
There is no default value for Booleans, so the passed values must be accepted.
\end_layout

\end_deeper
\begin_layout Itemize
Add to the parameters passed to 3D-RISM in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rism_init()
\end_layout

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
This is usually through the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rism3d_new()
\end_layout

\end_inset

 subroutine.
\end_layout

\end_deeper
\begin_layout Itemize
Broadcast parameter data from master node are to all other nodes in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rism_mpi_bcast()
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Default values for the new parameters are set in the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
default()
\end_layout

\end_inset

 subroutine.
\end_layout

\begin_layout Itemize
Add the parameter names to the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rism
\end_layout

\end_inset

 namelist and as a temporary variable in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rism_getPeriodicPotential()
\end_layout

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
This is prevent the namelist parser from getting upset the first pass through.
\end_layout

\end_deeper
\begin_layout Itemize
Add the parameter names to the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rism
\end_layout

\end_inset

 namelist and as a temporary variable in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
read_namelist()
\end_layout

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
Then assign the default value in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rismprm
\end_layout

\end_inset

 to the temporary value.
\end_layout

\begin_layout Itemize
Then assign the value read from the namelist back into 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rismprm
\end_layout

\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
Add output lines in
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rism_setparam()
\end_layout

\end_inset

 to write the values of the parameters to the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
sander
\end_layout

\end_inset

 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
mdout
\end_layout

\end_inset

 file.
\end_layout

\begin_layout Subsection
\begin_inset Flex Code
status open

\begin_layout Plain Layout
sff/mm_options.l
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This is a lex file for NAB to read the key-value pairs.
 There is a RISM section and you should be able to follow the examples.
 The type matters and there is some facility for input checking.
\end_layout

\begin_layout Subsection
\begin_inset Flex Code
status open

\begin_layout Plain Layout
sff/sff.h
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Changes are made in the “RISM
\begin_inset Quotes erd
\end_inset

 section at the end of the file.
 
\end_layout

\begin_layout Itemize
Modify the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
RismData
\end_layout

\end_inset

 struct, which is the same as the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rismprm_t
\end_layout

\end_inset

 type in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
amber_rism_interface.F90
\end_layout

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
The order of the variables and the types must match between the two data
 structures.
 This includes the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
padding
\end_layout

\end_inset

 variable.
\end_layout

\end_deeper
\begin_layout Subsection
\begin_inset Flex Code
status open

\begin_layout Plain Layout
sff/sff.c
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Only the first “RISM” section needs to be modified for non-string variables.
\end_layout

\begin_layout Itemize
Add a default value for the `RismData` struct variables.
 See 
\begin_inset CommandInset ref
LatexCommand formatted
reference "subsec:amber_rism_interface"

\end_inset

 for the expected default values.
\end_layout

\begin_deeper
\begin_layout Itemize
These simply indicate if a value has been set and is checked in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
update_param()
\end_layout

\end_inset

 of 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
amber_rism_interface.F90
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Boolean values are not checked.
\end_layout

\end_deeper
\begin_layout Itemize
The real defaults are in the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
defaults()
\end_layout

\end_inset

 subroutine of 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
amber_rism_interface.F90
\end_layout

\end_inset

 (see 
\begin_inset CommandInset ref
LatexCommand formatted
reference "subsec:amber_rism_interface"

\end_inset

).
\end_layout

\begin_layout Subsection
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rism/rism3d.snglpnt.c
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Add parameters to 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rismOptions
\end_layout

\end_inset

struct.
\end_layout

\begin_deeper
\begin_layout Itemize
Array or list type structures cannot be in the struct and need to be treated
 as global variables.
 Add them after the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rismOpt
\end_layout

\end_inset

 variable has been declared.
\end_layout

\end_deeper
\begin_layout Itemize
Set defaults in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
setDefaults()
\end_layout

\end_inset

.
 
\series bold
These values override the defaults in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout

\series bold
amber_rism_interface.F90
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Add output for new parameters in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
printOptions()
\end_layout

\end_inset

.
 This will output the default values of the parameters to the user as part
 of the usage dialog.
\end_layout

\begin_layout Itemize
Add example usage in the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
usage()
\end_layout

\end_inset

 function.
\end_layout

\begin_layout Itemize
If the parameter is required, add a check in 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
checkOptions()
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Add an 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
mm_options()
\end_layout

\end_inset

 call.
\end_layout

\begin_deeper
\begin_layout Itemize
Parameter values are passed to NAB via the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
mm_options()
\end_layout

\end_inset

 function, whether or not the user has explicitly set them.
\end_layout

\end_deeper
\begin_layout Subsection
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rism/rism_options.l
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This is a lex file very similar to 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
sff/mm_options.l
\end_layout

\end_inset

.
 Follow the existing examples.
\end_layout

\begin_layout Subsection
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rism/rism3d_c.F90
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Parameters will typically be passed to 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
rism3d_new()
\end_layout

\end_inset

, which must be updated.
\end_layout

\begin_layout Itemize
From here, it is up to you to pass the parameter to the appropriate part
 of the code.
\end_layout

\end_body
\end_document
